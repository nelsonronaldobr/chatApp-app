import { Conversation, Messages, User } from '.';
import { Auth } from '.';

export interface ErrorResponse {
    response: {
        data: { ok: boolean; messages?: Messages; errors?: Errors };
    };
}
export type Errors = {
    [key: string]: {
        type: string;
        value: string;
        msg: string;
        path: string;
        location: string;
    };
};

export interface AuthResponse {
    ok: boolean;
    tokenSession: string;
    user: Auth;
    messages: Messages;
}

export interface SimpleResponse {
    ok: boolean;
    messages: Messages;
}

export interface SearchUsersResponse {
    ok: boolean;
    users: User[];
}

export interface GetProfileResponse {
    ok: boolean;
    messages: Messages;
    data: { profile: User };
}
// Generated by https://quicktype.io

export interface SimpleErrorResponse {
    status: number;
    data: Data;
}

export interface Data {
    ok: boolean;
    messages: Messages;
}

export type FriendRequestStatus =
    | 'pending'
    | 'accepted'
    | 'rejected'
    | 'sent'
    | 'received';

export interface FriendRequest {
    _id: string;
    sender: User; // Usuario que env√≠a la solicitud
    receiver: User; // Usuario que recibe la solicitud
    status: FriendRequestStatus;
}

export interface SocialUserResponse {
    ok: true;
    data: {
        friends: number;
        friendRequestsReceived: number;
        friendRequestsSent: number;
    };
}

export interface GetFriendsResponse {
    ok: boolean;
    data: {
        friends: { friend: User; friendRequest: FriendRequest }[];
    };
}

export interface GetFriendRequestsReceivedResponse {
    ok: boolean;
    data: {
        friendRequestsReceived: FriendRequest[];
    };
}
export interface GetFriendRequestsSentResponse {
    ok: boolean;
    data: {
        friendRequestsSent: FriendRequest[];
    };
}

export interface GetConversationsLastMessage {
    ok: boolean;
    data: {
        conversations: Conversation[];
    };
}

export interface GetConversation {
    ok: boolean;
    data: {
        conversation: Conversation;
    };
}
